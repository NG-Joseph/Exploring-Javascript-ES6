{
  "{\"sourceRoot\":\"C:\\\\Users\\\\GHOST\\\\Desktop\\\\ES6\\\\ES6-Primer\\\\src\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\GHOST\\\\Desktop\\\\ES6\\\\ES6-Primer\",\"filename\":\"C:\\\\Users\\\\GHOST\\\\Desktop\\\\ES6\\\\ES6-Primer\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\GHOST\\\\Desktop\\\\ES6\\\\ES6-Primer\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer\\src\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer",
      "filename": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer\\src\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _tools = _interopRequireWildcard(require(\"./tools\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n(0, _tools[\"default\"])(\"Welcome! The application name is \\\"\".concat(_tools.appName, \"\\\". There is a function that returns \\\"\").concat((0, _tools.dummyFunction)(), \"\\\".\"));\n(0, _tools[\"default\"])((0, _tools.genericFunction)());\n(0, _tools[\"default\"])((0, _tools.multiplier)(44, 23));\n(0, _tools[\"default\"])((0, _tools.multiplier2)(1, 2, 3, 4, 5, 6, 7));\n\ntry {\n  var result = (0, _tools.multiplier2)(3, 5);\n  (0, _tools[\"default\"])(result);\n} catch (Error) {\n  (0, _tools[\"default\"])(Error.message);\n} //Typescript\n\n\n//Accessing object properties\nvar ﬁrstName = \"Pius\";\nvar lastName = \"Onobhayedo\";\nvar gender = \"male\";\nvar height = 1.7;\nvar hobbies = ['Tennis', 'Programming'];\nvar birthday = new Date(1900, 4, 5);\nvar isAlive = true;\nvar person1 = new _tools.Person(ﬁrstName, lastName, gender, height, hobbies, birthday, isAlive);\n(0, _tools[\"default\"])(\"Person 1 is \".concat(person1.ﬁrstName, \" whose height is \").concat(person1.height, \" and birthday is \").concat(person1.birthday.toLocaleDateString())); //Define the function that will return new Promise that wraps the asynchronous call to setTimeout()\n\nvar promiseAwareTimeout = function promiseAwareTimeout() {\n  var milliseconds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n  //The function expects milliseconds to be passed. If not passed, milliseconds parameter defaults to 1000\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      resolve(\"Timeout of \".concat(milliseconds, \" milliseconds is over\")); //send out a success feedback with data using resolve\n    }, milliseconds); //set timeout for passed milliseconds. Defaults to 1000\n  });\n}; //define a function that uses our Promise executor\n\n\nvar usePromiseAwareTimeout = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(milliseconds) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            (0, _tools[\"default\"])('About to call timeout');\n            _context.prev = 1;\n            _context.t0 = _tools[\"default\"];\n            _context.next = 5;\n            return promiseAwareTimeout(milliseconds);\n\n          case 5:\n            _context.t1 = _context.sent;\n            (0, _context.t0)(_context.t1);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t2 = _context[\"catch\"](1);\n            (0, _tools[\"default\"])(_context.t2);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 9]]);\n  }));\n\n  return function usePromiseAwareTimeout(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); //call the async function.\n\n\nusePromiseAwareTimeout(3000);\n(0, _tools.timeout)(7000);\n(0, _tools.timeoutwithpromise)(7000); //logger(coordinateGenerator(2,3,4,5,6));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcE5hbWUiLCJyZXN1bHQiLCJFcnJvciIsIm1lc3NhZ2UiLCLvrIFyc3ROYW1lIiwibGFzdE5hbWUiLCJnZW5kZXIiLCJoZWlnaHQiLCJob2JiaWVzIiwiYmlydGhkYXkiLCJEYXRlIiwiaXNBbGl2ZSIsInBlcnNvbjEiLCJQZXJzb24iLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJwcm9taXNlQXdhcmVUaW1lb3V0IiwibWlsbGlzZWNvbmRzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJzZXRUaW1lb3V0IiwidXNlUHJvbWlzZUF3YXJlVGltZW91dCIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7OztBQU9BOzs7Ozs7Ozs7O0FBRUEsb0VBQTRDQSxjQUE1QyxvREFBMkYsMkJBQTNGO0FBQ0EsdUJBQVMsNkJBQVQ7QUFFQSx1QkFBUyx1QkFBVyxFQUFYLEVBQWMsRUFBZCxDQUFUO0FBRUEsdUJBQVMsd0JBQVksQ0FBWixFQUFjLENBQWQsRUFBZ0IsQ0FBaEIsRUFBa0IsQ0FBbEIsRUFBb0IsQ0FBcEIsRUFBc0IsQ0FBdEIsRUFBd0IsQ0FBeEIsQ0FBVDs7QUFDQSxJQUFHO0FBQ0QsTUFBSUMsTUFBTSxHQUFHLHdCQUFZLENBQVosRUFBYyxDQUFkLENBQWI7QUFDQSx5QkFBT0EsTUFBUDtBQUNELENBSEQsQ0FJQSxPQUFNQyxLQUFOLEVBQ0E7QUFDSSx5QkFBT0EsS0FBSyxDQUFDQyxPQUFiO0FBRUgsQyxDQUVEOzs7QUFHQTtBQUNDLElBQUlDLFFBQVEsR0FBRyxNQUFmO0FBQ0MsSUFBSUMsUUFBUSxHQUFHLFlBQWY7QUFDQyxJQUFJQyxNQUFNLEdBQUcsTUFBYjtBQUNDLElBQUlDLE1BQU0sR0FBRyxHQUFiO0FBQ0MsSUFBSUMsT0FBTyxHQUFHLENBQUMsUUFBRCxFQUFVLGFBQVYsQ0FBZDtBQUNDLElBQUlDLFFBQVEsR0FBRyxJQUFJQyxJQUFKLENBQVMsSUFBVCxFQUFjLENBQWQsRUFBZ0IsQ0FBaEIsQ0FBZjtBQUNDLElBQUlDLE9BQU8sR0FBRyxJQUFkO0FBQ1AsSUFBSUMsT0FBTyxHQUFHLElBQUlDLGFBQUosQ0FBV1QsUUFBWCxFQUFxQkMsUUFBckIsRUFBK0JDLE1BQS9CLEVBQXVDQyxNQUF2QyxFQUFvREMsT0FBcEQsRUFBNkRDLFFBQTdELEVBQXVFRSxPQUF2RSxDQUFkO0FBQ0EsNkNBQW1CQyxPQUFPLENBQUNSLFFBQTNCLDhCQUF1RFEsT0FBTyxDQUFDTCxNQUEvRCw4QkFBeUZLLE9BQU8sQ0FBQ0gsUUFBUixDQUFpQkssa0JBQWpCLEVBQXpGLEcsQ0FFQTs7QUFDQSxJQUFNQyxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQXNCLEdBQXVCO0FBQUEsTUFBdEJDLFlBQXNCLHVFQUFULElBQVM7QUFBRTtBQUNqRCxTQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDeENDLElBQUFBLFVBQVUsQ0FBQyxZQUFJO0FBQ2ZGLE1BQUFBLE9BQU8sc0JBQWVGLFlBQWYsMkJBQVAsQ0FEZSxDQUM2QztBQUMzRCxLQUZTLEVBRVBBLFlBRk8sQ0FBVixDQUR3QyxDQUd2QjtBQUNoQixHQUpNLENBQVA7QUFLQSxDQU5KLEMsQ0FPRzs7O0FBQ0EsSUFBTUssc0JBQXNCO0FBQUEscUVBQUcsaUJBQU9MLFlBQVA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUM5QixtQ0FBSSx1QkFBSjtBQUQ4QjtBQUFBLDBCQUc5Qk0saUJBSDhCO0FBQUE7QUFBQSxtQkFHcEJQLG1CQUFtQixDQUFDQyxZQUFELENBSEM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFLOUI7O0FBTDhCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQXRCSyxzQkFBc0I7QUFBQTtBQUFBO0FBQUEsR0FBNUIsQyxDQVFBOzs7QUFDQUEsc0JBQXNCLENBQUMsSUFBRCxDQUF0QjtBQUdILG9CQUFRLElBQVI7QUFDQSwrQkFBbUIsSUFBbkIsRSxDQUNBIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcR0hPU1RcXERlc2t0b3BcXEVTNlxcRVM2LVByaW1lclxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvL1VzaW5nIHZhciBhbmQgZnVuY3Rpb25cclxuXHJcbi8qIFxyXG5pbXBvcnQgbG9nZ2VyIGZyb20gJy4vdG9vbHMnICBcclxubG9nZ2VyKFwiV2VsY29tZSEgV2UgYXJlIG5vdyBoYXZpbmcgZnVuIHdpdGggbW9kdWxhcml0eVwiKTsgXHJcbiovXHJcbi8vIHVzaW5nIEJhY2sgLXRpY2tzXHJcbmltcG9ydCBsb2dnZXIsIFxyXG57YXBwTmFtZSwgZHVtbXlGdW5jdGlvbiwgZ2VuZXJpY0Z1bmN0aW9uLG11bHRpcGxpZXIsIG11bHRpcGxpZXIyLCB0aW1lb3V0LCB0aW1lb3V0d2l0aHByb21pc2UsY29vcmRpbmF0ZUdlbmVyYXRvcn0gZnJvbSAnLi90b29scyc7IFxyXG5sb2dnZXIoYFdlbGNvbWUhIFRoZSBhcHBsaWNhdGlvbiBuYW1lIGlzIFwiJHthcHBOYW1lfVwiLiBUaGVyZSBpcyBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBcIiR7ZHVtbXlGdW5jdGlvbigpfVwiLmApOyBcclxubG9nZ2VyICAoZ2VuZXJpY0Z1bmN0aW9uKCkpO1xyXG5cclxubG9nZ2VyICAobXVsdGlwbGllcig0NCwyMykpO1xyXG5cclxubG9nZ2VyICAobXVsdGlwbGllcjIoMSwyLDMsNCw1LDYsNykpO1xyXG50cnl7XHJcbiAgbGV0IHJlc3VsdCA9IG11bHRpcGxpZXIyKDMsNSk7XHJcbiAgbG9nZ2VyKHJlc3VsdCk7XHJcbn1cclxuY2F0Y2goRXJyb3IpXHJcbntcclxuICAgIGxvZ2dlcihFcnJvci5tZXNzYWdlKTtcclxuICAgIFxyXG59XHJcblxyXG4vL1R5cGVzY3JpcHRcclxuXHJcbmltcG9ydCBsb2csIHtQZXJzb259IGZyb20gJy4vdG9vbHMnOyBcclxuLy9BY2Nlc3Npbmcgb2JqZWN0IHByb3BlcnRpZXNcclxuIGxldCDvrIFyc3ROYW1lID0gXCJQaXVzXCI7XHJcbiAgbGV0IGxhc3ROYW1lID0gXCJPbm9iaGF5ZWRvXCI7XHJcbiAgIGxldCBnZW5kZXIgPSBcIm1hbGVcIjtcclxuICAgIGxldCBoZWlnaHQgPSAxLjc7XHJcbiAgICAgbGV0IGhvYmJpZXMgPSBbJ1Rlbm5pcycsJ1Byb2dyYW1taW5nJ107XHJcbiAgICAgIGxldCBiaXJ0aGRheSA9IG5ldyBEYXRlKDE5MDAsNCw1KTtcclxuICAgICAgIGxldCBpc0FsaXZlID0gdHJ1ZTsgXHJcbmxldCBwZXJzb24xID0gbmV3IFBlcnNvbijvrIFyc3ROYW1lLCBsYXN0TmFtZSwgZ2VuZGVyLCBoZWlnaHQsICAgICAgaG9iYmllcywgYmlydGhkYXksIGlzQWxpdmUpIFxyXG5sb2coYFBlcnNvbiAxIGlzICR7cGVyc29uMS7vrIFyc3ROYW1lfSB3aG9zZSBoZWlnaHQgaXMgJHtwZXJzb24xLmhlaWdodH0gYW5kIGJpcnRoZGF5IGlzICR7cGVyc29uMS5iaXJ0aGRheS50b0xvY2FsZURhdGVTdHJpbmcoKX1gKTsgXHJcblxyXG4vL0RlZmluZSB0aGUgZnVuY3Rpb24gdGhhdCB3aWxsIHJldHVybiBuZXcgUHJvbWlzZSB0aGF0IHdyYXBzIHRoZSBhc3luY2hyb25vdXMgY2FsbCB0byBzZXRUaW1lb3V0KClcclxuY29uc3QgcHJvbWlzZUF3YXJlVGltZW91dCA9IChtaWxsaXNlY29uZHM9MTAwMCkgPT4geyAvL1RoZSBmdW5jdGlvbiBleHBlY3RzIG1pbGxpc2Vjb25kcyB0byBiZSBwYXNzZWQuIElmIG5vdCBwYXNzZWQsIG1pbGxpc2Vjb25kcyBwYXJhbWV0ZXIgZGVmYXVsdHMgdG8gMTAwMFxyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgIHNldFRpbWVvdXQoKCk9PntcclxuICAgIHJlc29sdmUoYFRpbWVvdXQgb2YgJHttaWxsaXNlY29uZHN9IG1pbGxpc2Vjb25kcyBpcyBvdmVyYCk7IC8vc2VuZCBvdXQgYSBzdWNjZXNzIGZlZWRiYWNrIHdpdGggZGF0YSB1c2luZyByZXNvbHZlXHJcbiAgICB9LCBtaWxsaXNlY29uZHMpIC8vc2V0IHRpbWVvdXQgZm9yIHBhc3NlZCBtaWxsaXNlY29uZHMuIERlZmF1bHRzIHRvIDEwMDBcclxuICAgIH0pO1xyXG4gICB9XHJcbiAgIC8vZGVmaW5lIGEgZnVuY3Rpb24gdGhhdCB1c2VzIG91ciBQcm9taXNlIGV4ZWN1dG9yXHJcbiAgIGNvbnN0IHVzZVByb21pc2VBd2FyZVRpbWVvdXQgPSBhc3luYyAobWlsbGlzZWNvbmRzKSA9PiB7XHJcbiAgICBsb2coJ0Fib3V0IHRvIGNhbGwgdGltZW91dCcpXHJcbiAgICB0cnl7XHJcbiAgICBsb2coYXdhaXQgcHJvbWlzZUF3YXJlVGltZW91dChtaWxsaXNlY29uZHMpKTtcclxuICAgIH1jYXRjaChlcnJvcil7XHJcbiAgICBsb2coZXJyb3IpO1xyXG4gICAgfVxyXG4gICB9O1xyXG4gICAvL2NhbGwgdGhlIGFzeW5jIGZ1bmN0aW9uLlxyXG4gICB1c2VQcm9taXNlQXdhcmVUaW1lb3V0KDMwMDApOyBcclxuXHJcblxyXG50aW1lb3V0KDcwMDApO1xyXG50aW1lb3V0d2l0aHByb21pc2UoNzAwMCk7XHJcbi8vbG9nZ2VyKGNvb3JkaW5hdGVHZW5lcmF0b3IoMiwzLDQsNSw2KSk7XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "appName",
        "result",
        "Error",
        "message",
        "ﬁrstName",
        "lastName",
        "gender",
        "height",
        "hobbies",
        "birthday",
        "Date",
        "isAlive",
        "person1",
        "Person",
        "toLocaleDateString",
        "promiseAwareTimeout",
        "milliseconds",
        "Promise",
        "resolve",
        "reject",
        "setTimeout",
        "usePromiseAwareTimeout",
        "log"
      ],
      "mappings": ";;;;AAOA;;;;;;;;;;AAEA,oEAA4CA,cAA5C,oDAA2F,2BAA3F;AACA,uBAAS,6BAAT;AAEA,uBAAS,uBAAW,EAAX,EAAc,EAAd,CAAT;AAEA,uBAAS,wBAAY,CAAZ,EAAc,CAAd,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAtB,EAAwB,CAAxB,CAAT;;AACA,IAAG;AACD,MAAIC,MAAM,GAAG,wBAAY,CAAZ,EAAc,CAAd,CAAb;AACA,yBAAOA,MAAP;AACD,CAHD,CAIA,OAAMC,KAAN,EACA;AACI,yBAAOA,KAAK,CAACC,OAAb;AAEH,C,CAED;;;AAGA;AACC,IAAIC,QAAQ,GAAG,MAAf;AACC,IAAIC,QAAQ,GAAG,YAAf;AACC,IAAIC,MAAM,GAAG,MAAb;AACC,IAAIC,MAAM,GAAG,GAAb;AACC,IAAIC,OAAO,GAAG,CAAC,QAAD,EAAU,aAAV,CAAd;AACC,IAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB,CAAf;AACC,IAAIC,OAAO,GAAG,IAAd;AACP,IAAIC,OAAO,GAAG,IAAIC,aAAJ,CAAWT,QAAX,EAAqBC,QAArB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAAoDC,OAApD,EAA6DC,QAA7D,EAAuEE,OAAvE,CAAd;AACA,6CAAmBC,OAAO,CAACR,QAA3B,8BAAuDQ,OAAO,CAACL,MAA/D,8BAAyFK,OAAO,CAACH,QAAR,CAAiBK,kBAAjB,EAAzF,G,CAEA;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAuB;AAAA,MAAtBC,YAAsB,uEAAT,IAAS;AAAE;AACjD,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCC,IAAAA,UAAU,CAAC,YAAI;AACfF,MAAAA,OAAO,sBAAeF,YAAf,2BAAP,CADe,CAC6C;AAC3D,KAFS,EAEPA,YAFO,CAAV,CADwC,CAGvB;AAChB,GAJM,CAAP;AAKA,CANJ,C,CAOG;;;AACA,IAAMK,sBAAsB;AAAA,qEAAG,iBAAOL,YAAP;AAAA;AAAA;AAAA;AAAA;AAC9B,mCAAI,uBAAJ;AAD8B;AAAA,0BAG9BM,iBAH8B;AAAA;AAAA,mBAGpBP,mBAAmB,CAACC,YAAD,CAHC;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAK9B;;AAL8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBK,sBAAsB;AAAA;AAAA;AAAA,GAA5B,C,CAQA;;;AACAA,sBAAsB,CAAC,IAAD,CAAtB;AAGH,oBAAQ,IAAR;AACA,+BAAmB,IAAnB,E,CACA",
      "sourceRoot": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer\\src\\",
      "sourcesContent": [
        "//Using var and function\r\n\r\n/* \r\nimport logger from './tools'  \r\nlogger(\"Welcome! We are now having fun with modularity\"); \r\n*/\r\n// using Back -ticks\r\nimport logger, \r\n{appName, dummyFunction, genericFunction,multiplier, multiplier2, timeout, timeoutwithpromise,coordinateGenerator} from './tools'; \r\nlogger(`Welcome! The application name is \"${appName}\". There is a function that returns \"${dummyFunction()}\".`); \r\nlogger  (genericFunction());\r\n\r\nlogger  (multiplier(44,23));\r\n\r\nlogger  (multiplier2(1,2,3,4,5,6,7));\r\ntry{\r\n  let result = multiplier2(3,5);\r\n  logger(result);\r\n}\r\ncatch(Error)\r\n{\r\n    logger(Error.message);\r\n    \r\n}\r\n\r\n//Typescript\r\n\r\nimport log, {Person} from './tools'; \r\n//Accessing object properties\r\n let ﬁrstName = \"Pius\";\r\n  let lastName = \"Onobhayedo\";\r\n   let gender = \"male\";\r\n    let height = 1.7;\r\n     let hobbies = ['Tennis','Programming'];\r\n      let birthday = new Date(1900,4,5);\r\n       let isAlive = true; \r\nlet person1 = new Person(ﬁrstName, lastName, gender, height,      hobbies, birthday, isAlive) \r\nlog(`Person 1 is ${person1.ﬁrstName} whose height is ${person1.height} and birthday is ${person1.birthday.toLocaleDateString()}`); \r\n\r\n//Define the function that will return new Promise that wraps the asynchronous call to setTimeout()\r\nconst promiseAwareTimeout = (milliseconds=1000) => { //The function expects milliseconds to be passed. If not passed, milliseconds parameter defaults to 1000\r\n    return new Promise((resolve, reject) => {\r\n    setTimeout(()=>{\r\n    resolve(`Timeout of ${milliseconds} milliseconds is over`); //send out a success feedback with data using resolve\r\n    }, milliseconds) //set timeout for passed milliseconds. Defaults to 1000\r\n    });\r\n   }\r\n   //define a function that uses our Promise executor\r\n   const usePromiseAwareTimeout = async (milliseconds) => {\r\n    log('About to call timeout')\r\n    try{\r\n    log(await promiseAwareTimeout(milliseconds));\r\n    }catch(error){\r\n    log(error);\r\n    }\r\n   };\r\n   //call the async function.\r\n   usePromiseAwareTimeout(3000); \r\n\r\n\r\ntimeout(7000);\r\ntimeoutwithpromise(7000);\r\n//logger(coordinateGenerator(2,3,4,5,6));\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1589327174828
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\GHOST\\\\Desktop\\\\ES6\\\\ES6-Primer\\\\src\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\GHOST\\\\Desktop\\\\ES6\\\\ES6-Primer\",\"filename\":\"C:\\\\Users\\\\GHOST\\\\Desktop\\\\ES6\\\\ES6-Primer\\\\src\\\\tools.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\GHOST\\\\Desktop\\\\ES6\\\\ES6-Primer\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer\\src\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer",
      "filename": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer\\src\\tools.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer\\src\\tools.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer\\src\\tools.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer\\src\\",
        "sourceFileName": "tools.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.coordinateGenerator = exports.genericFunction1 = exports.timeout = exports.Person = exports[\"default\"] = exports.multiplier2 = exports.multiplier = exports.genericFunction = exports.dummyFunction = exports.appName = void 0;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*var logger = function(output){\r\n     console.log(output)\r\n     } ;\r\n      export var appName = \"ES6 Review\";\r\n      export var dummyFunction = function(){\r\n            return \"I am a dummy function\";  \r\n        } \r\n        export default logger; */\n//Lexical block scoping\n\n/*    const logger = output => {\r\n        console.log(output);\r\n    }\r\n      export const appName = \"ES6 Primer\"\r\n      export const dummyFunction = () => {  \r\n        let feedback = \"I am a dummy function\"; //mutable variable \r\n        feedback = \"I am still a dummy function\";//value changed\r\n        return feedback;  \r\n    } \r\n//spread operators\r\n    export const genericFunction = () => {\r\n        const languages = [\"Python\", \"Java\",\"C#\", \"C++\"];\r\n        const [fL,sL, ...otherLanguages] = languages; //deconstruction\r\n        return `First Language is ${fL} and the second is ${sL} and the rest are  ${otherLanguages}`;\r\n    }\r\n      export const multiplier1 = (...numbers) => {\r\n        let product = 1;\r\n        if (numbers.length < 2){\r\n        throw new Error(\"Illegal arguments counts. Number of Arguments passed Arguments must be greater than 1\")\r\n         }    \r\n               //loop through using the old forEach approach which still works\r\n              //numbers.forEach((number)=>{\r\n             //    product = product * number;     \r\n             //});    \r\n              //More elegantly we can replace the above forEach with ES6's for...of     \r\n              for(let number of numbers){     \r\n                      product = product * number;    \r\n                     }    \r\n                     \r\n                     return product;\r\n    }\r\n         \r\n    export default logger;*/\n//Using Var and Fucntion\n\n/*var logger = function(output)\r\n{   \r\n    console.log(output) \r\n}  \r\nexport default logger;\r\n*/\n\n/*\r\nvar logger = function(output)\r\n{ \r\n    console.log(output);\r\n} \r\nexport var appName = \"ES6 Review\"; \r\nexport var dummyFunction = function()\r\n{  \r\n    return \"I am a dummy function\";  \r\n}\r\nexport default logger;\r\n*/\n//Parameter scenarios- new styles\n\n/*\r\nvar logger = output => \r\n{\r\n    console.log(output);\r\n}\r\nexport var appName = \"ES6 Review\"; \r\n\r\nexport var dummyFunction = ()=>\r\n{\r\n    return\"I am a dummy function\";\r\n}\r\n*/\n//Lexical Blcok scoping\n// Using Const or Let\nvar logger = function logger(output) {\n  console.log(output);\n};\n\nvar appName = \"ES6 Review\";\nexports.appName = appName;\n\nvar dummyFunction = function dummyFunction() {\n  return \"I am a dummy function\";\n};\n/* Spread Operators*/\n//Destructuring Assignment\n\n\nexports.dummyFunction = dummyFunction;\n\nvar genericFunction = function genericFunction() {\n  var languages = ['python', 'javascript', 'c#', 'c++'];\n  var firstLang = languages[0],\n      secondLang = languages[1],\n      Otherlanguages = languages.slice(2);\n  return \"first language is \".concat(firstLang, \" and the second Language is \").concat(secondLang, \" and the rest are \").concat(Otherlanguages);\n};\n\nexports.genericFunction = genericFunction;\n\nvar multiplier = function multiplier(a) {\n  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return a * b;\n};\n\nexports.multiplier = multiplier;\n\nvar multiplier2 = function multiplier2() {\n  for (var _len = arguments.length, numberstomultiply = new Array(_len), _key = 0; _key < _len; _key++) {\n    numberstomultiply[_key] = arguments[_key];\n  }\n\n  if (numberstomultiply.length < 2) {\n    throw new Error(\"Illegal Argument Count,the number of  Arguments passed must be greater than one\");\n  }\n\n  var product = 1;\n\n  for (var _i = 0, _numberstomultiply = numberstomultiply; _i < _numberstomultiply.length; _i++) {\n    var number = _numberstomultiply[_i];\n    product = product * number;\n  }\n\n  return product;\n};\n\nexports.multiplier2 = multiplier2;\nvar _default = logger; //TypeScript\n\nexports[\"default\"] = _default;\n\nvar Person = function Person(ﬁrstName, lastName, gender, height, hobbies, birthday, isAlive) {\n  _classCallCheck(this, Person);\n\n  this.ﬁrstName = ﬁrstName;\n  this.lastName = lastName;\n  this.gender = gender;\n  this.height = height;\n  this.hobbies = hobbies;\n  this.birthday = birthday;\n  this.isAlive = isAlive;\n};\n\nexports.Person = Person;\n;\n\nvar timeout = function timeout(millisecond) {\n  setTimeout(function () {\n    return logger(\"Timeout is over by \" + millisecond / 1000 + \" seconds\"); //send out a success feedback with data using resolve \n  }, millisecond);\n};\n/*export const timeoutwithpromise = (millisecond) =>{\r\n        new Promise ((resolve, reject) =>{\r\n        setTimeout(()=>{  \r\n            resolve(\"Timeout is over by \"+ millisecond/1000+\" seconds\");\r\n            reject(\"Timeout is over but I am upset. You should not have invoked a timeout in the ﬁrst place. Hence I am sending a <em> reject </em> instead of a <em>resolve</em>!\"); \r\n            //send out a reject feedback     \r\n               }, 1000)    \r\n              }).then((data) => { \r\n                        logger(`${data}`);\r\n                        //This should output \"Timeout is over\"    \r\n                        }).catch((error) => {\r\n                          //This will only be reached it the asynchronous function returned a reject statement.        \r\n                           return logger(`Error message received: ${error}`);   \r\n                           }).then(() =>{       \r\n                               return logger(`This function is executed after success or failure is returned`) \r\n                                 }, millisecond)\r\n}*/\n\n\nexports.timeout = timeout;\n\nvar genericFunction1 = function genericFunction1(m, c) {\n  for (var _len2 = arguments.length, x = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    x[_key2 - 2] = arguments[_key2];\n  }\n\n  //This function returns an array of {x,y} objects for all the x arguments passed.\n  //Map the array of x into an array of {x,y} object, with the y value calculated each time.    \n  var coordinates = x.map(function (x) {\n    return {\n      'x': x,\n      'y': m * x + c\n    };\n  }); //loop through our array of {x,y} and prepare the output string to be returned. We can do this with the forEach() method of array object or use the for…of loop introduced in ES6 as shown below     \n\n  var output = 'The (x,y) values are as follows: ';\n\n  var _iterator = _createForOfIteratorHelper(coordinates),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var coordinate = _step.value;\n      var xy = \"(\".concat(coordinate.x, \",\").concat(coordinate.y, \")\");\n      output += xy;\n    } //Previous style…(Going forward, we shall only be using the new for…of loop in such scenario)\n    //coordinates.forEach((coordinate)=>{ \n    //     let xy = `(${coordinate.x},${coordinate.y})`;    \n    //    output+=xy;     //})     \n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return output;\n};\n\nexports.genericFunction1 = genericFunction1;\n\nvar coordinateGenerator = function coordinateGenerator(m, c) {\n  for (var _len3 = arguments.length, xValues = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    xValues[_key3 - 2] = arguments[_key3];\n  }\n\n  //This function returns an array of {x,y} objects for all the x arguments passed to it.\n  var coordinates = xValues.map(function (x) {\n    return {\n      'x': x,\n      'y': m * x + c\n    };\n  });\n  var output = 'The (x,y) values are as follows ';\n\n  var _iterator2 = _createForOfIteratorHelper(coordinates),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var coordinate = _step2.value;\n      var xy = \"(\".concat(coordinate.x, \", \").concat(coordinate.y, \")\"); //output = output + xy  //This is the same as below.\n\n      output += xy;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return output;\n};\n\nexports.coordinateGenerator = coordinateGenerator;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "tools.js"
      ],
      "names": [
        "logger",
        "output",
        "console",
        "log",
        "appName",
        "dummyFunction",
        "genericFunction",
        "languages",
        "firstLang",
        "secondLang",
        "Otherlanguages",
        "multiplier",
        "a",
        "b",
        "multiplier2",
        "numberstomultiply",
        "length",
        "Error",
        "product",
        "number",
        "Person",
        "ﬁrstName",
        "lastName",
        "gender",
        "height",
        "hobbies",
        "birthday",
        "isAlive",
        "timeout",
        "millisecond",
        "setTimeout",
        "genericFunction1",
        "m",
        "c",
        "x",
        "coordinates",
        "map",
        "coordinate",
        "xy",
        "y",
        "coordinateGenerator",
        "xValues"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;;;;;;;AASQ;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCJ;;AAEA;;;;;;;AAOA;;;;;;;;;;;;AAaA;;AACA;;;;;;;;;;;;AAaA;AACA;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,MAAM,EAAI;AAErBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,CAHD;;AAIO,IAAIG,OAAO,GAAG,YAAd;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAI;AAE7B,SAAM,uBAAN;AACH,CAHM;AAKP;AACA;;;;;AACO,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC/B,MAAMC,SAAS,GAAG,CAAC,QAAD,EAAU,YAAV,EAAuB,IAAvB,EAA6B,KAA7B,CAAlB;AAD+B,MAExBC,SAFwB,GAEkBD,SAFlB;AAAA,MAEdE,UAFc,GAEkBF,SAFlB;AAAA,MAEAG,cAFA,GAEkBH,SAFlB;AAG/B,qCAA4BC,SAA5B,yCAAoEC,UAApE,+BAAmGC,cAAnG;AACH,CAJM;;;;AAMA,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAW;AAAA,MAARC,CAAQ,uEAAN,CAAM;AAC/B,SAAOD,CAAC,GAACC,CAAT;AACH,CAFM;;;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAC3B;AAAA,oCAD+BC,iBAC/B;AAD+BA,IAAAA,iBAC/B;AAAA;;AACI,MAAGA,iBAAiB,CAACC,MAAlB,GAA2B,CAA9B,EAAgC;AAC5B,UAAM,IAAIC,KAAJ,CAAU,iFAAV,CAAN;AACH;;AACF,MAAIC,OAAO,GAAG,CAAd;;AACA,wCAAkBH,iBAAlB,wCAAoC;AAAhC,QAAII,MAAM,yBAAV;AACAD,IAAAA,OAAO,GAAGA,OAAO,GAAGC,MAApB;AACH;;AACD,SAAOD,OAAP;AACF,CAVM;;;eAWSlB,M,EAChB;;;;IACcoB,M,GAEV,gBAAYC,QAAZ,EAAsBC,QAAtB,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgDC,OAAhD,EAAyDC,QAAzD,EAAmEC,OAAnE,EACA;AAAA;;AAAG,OAAKN,QAAL,GAAgBA,QAAhB;AACC,OAAKC,QAAL,GAAgBA,QAAhB;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKC,OAAL,GAAeA,OAAf;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACA,OAAKC,OAAL,GAAeA,OAAf;AACH,C;;;AACJ;;AAEM,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,WAAW,EAAG;AACjCC,EAAAA,UAAU,CAAC,YACf;AACG,WAAO9B,MAAM,CAAC,wBAAuB6B,WAAW,GAAC,IAAnC,GAAwC,UAAzC,CAAb,CADH,CAEG;AACF,GAJa,EAKVA,WALU,CAAV;AAOH,CARM;AAUP;;;;;;;;;;;;;;;;;;;;;AAmBW,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAIC,CAAJ,EAAgB;AAAA,qCAANC,CAAM;AAANA,IAAAA,CAAM;AAAA;;AAC5C;AAEA;AACC,MAAIC,WAAW,GAAGD,CAAC,CAACE,GAAF,CAAM,UAACF,CAAD,EAAO;AAC1B,WAAO;AAAC,WAAKA,CAAN;AAAS,WAAOF,CAAC,GAACE,CAAH,GAAQD;AAAvB,KAAP;AACD,GAFc,CAAlB,CAJ2C,CAOtC;;AACA,MAAIhC,MAAM,GAAG,mCAAb;;AARsC,6CASfkC,WATe;AAAA;;AAAA;AAStC,wDAAmC;AAAA,UAA1BE,UAA0B;AAC9B,UAAIC,EAAE,cAAOD,UAAU,CAACH,CAAlB,cAAuBG,UAAU,CAACE,CAAlC,MAAN;AACAtC,MAAAA,MAAM,IAAEqC,EAAR;AACH,KAZoC,CAapC;AACD;AACA;AACC;;AAhBoC;AAAA;AAAA;AAAA;AAAA;;AAiB1B,SAAOrC,MAAP;AACF,CAlBb;;;;AAqBD,IAAMuC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACR,CAAD,EAAIC,CAAJ,EAAsB;AAAA,qCAAZQ,OAAY;AAAZA,IAAAA,OAAY;AAAA;;AACrD;AAEA,MAAIN,WAAW,GAAGM,OAAO,CAACL,GAAR,CACd,UAACF,CAAD,EAAM;AACF,WAAO;AAAC,WAAIA,CAAL;AAAQ,WAAKF,CAAC,GAACE,CAAH,GAAOD;AAAnB,KAAP;AACH,GAHa,CAAlB;AAKA,MAAIhC,MAAM,GAAG,kCAAb;;AARqD,8CAS9BkC,WAT8B;AAAA;;AAAA;AASrD,2DAAmC;AAAA,UAA1BE,UAA0B;AAC/B,UAAIC,EAAE,cAAOD,UAAU,CAACH,CAAlB,eAAwBG,UAAU,CAACE,CAAnC,MAAN,CAD+B,CAE/B;;AACAtC,MAAAA,MAAM,IAAGqC,EAAT;AACH;AAboD;AAAA;AAAA;AAAA;AAAA;;AAcrD,SAAOrC,MAAP;AAEH,CAhBM",
      "sourceRoot": "C:\\Users\\GHOST\\Desktop\\ES6\\ES6-Primer\\src\\",
      "sourcesContent": [
        "/*var logger = function(output){\r\n     console.log(output)\r\n     } ;\r\n      export var appName = \"ES6 Review\";\r\n      export var dummyFunction = function(){\r\n            return \"I am a dummy function\";  \r\n        } \r\n        export default logger; */\r\n\r\n        //Lexical block scoping\r\n    /*    const logger = output => {\r\n            console.log(output);\r\n        }\r\n\r\n        export const appName = \"ES6 Primer\"\r\n\r\n        export const dummyFunction = () => {  \r\n            let feedback = \"I am a dummy function\"; //mutable variable \r\n            feedback = \"I am still a dummy function\";//value changed\r\n            return feedback;  \r\n        } \r\n//spread operators\r\n        export const genericFunction = () => {\r\n            const languages = [\"Python\", \"Java\",\"C#\", \"C++\"];\r\n            const [fL,sL, ...otherLanguages] = languages; //deconstruction\r\n            return `First Language is ${fL} and the second is ${sL} and the rest are  ${otherLanguages}`;\r\n        }\r\n\r\n        export const multiplier1 = (...numbers) => {\r\n            let product = 1;\r\n            if (numbers.length < 2){\r\n            throw new Error(\"Illegal arguments counts. Number of Arguments passed Arguments must be greater than 1\")\r\n             }    \r\n                   //loop through using the old forEach approach which still works\r\n                  //numbers.forEach((number)=>{\r\n                 //    product = product * number;     \r\n                 //});    \r\n                  //More elegantly we can replace the above forEach with ES6's for...of     \r\n                  for(let number of numbers){     \r\n                          product = product * number;    \r\n                         }    \r\n                         \r\n                         return product;\r\n        }\r\n             \r\n        export default logger;*/\r\n        \r\n//Using Var and Fucntion\r\n\r\n/*var logger = function(output)\r\n{   \r\n    console.log(output) \r\n}  \r\nexport default logger;\r\n*/\r\n\r\n/*\r\nvar logger = function(output)\r\n{ \r\n    console.log(output);\r\n} \r\nexport var appName = \"ES6 Review\"; \r\nexport var dummyFunction = function()\r\n{  \r\n    return \"I am a dummy function\";  \r\n}\r\nexport default logger;\r\n*/\r\n\r\n//Parameter scenarios- new styles\r\n/*\r\nvar logger = output => \r\n{\r\n    console.log(output);\r\n}\r\nexport var appName = \"ES6 Review\"; \r\n\r\nexport var dummyFunction = ()=>\r\n{\r\n    return\"I am a dummy function\";\r\n}\r\n*/\r\n\r\n//Lexical Blcok scoping\r\n// Using Const or Let\r\n\r\nconst logger = output => {\r\n\r\n    console.log(output);\r\n}\r\nexport let appName = \"ES6 Review\"; \r\n\r\nexport const dummyFunction = ()=>{\r\n\r\n    return\"I am a dummy function\";\r\n}\r\n\r\n/* Spread Operators*/\r\n//Destructuring Assignment\r\nexport let genericFunction = () => {\r\n    const languages = ['python','javascript','c#', 'c++']\r\n    const [firstLang,secondLang,...Otherlanguages] = languages;\r\n    return `first language is ${firstLang} and the second Language is ${secondLang} and the rest are ${Otherlanguages}`;\r\n}\r\n\r\nexport let multiplier = (a,b=1) => {\r\n    return(a*b);\r\n}\r\n\r\nexport const multiplier2 = (...numberstomultiply)=>\r\n{\r\n    if(numberstomultiply.length < 2){\r\n        throw new Error(\"Illegal Argument Count,the number of  Arguments passed must be greater than one\");\r\n    }\r\n   let product = 1;\r\n   for(let number of numberstomultiply){\r\n       product = product * number;\r\n   }\r\n   return product;\r\n}\r\n export default logger;\r\n//TypeScript\r\n export class Person\r\n { \r\n    constructor(ﬁrstName, lastName, gender, height, hobbies, birthday, isAlive)\r\n    {  this.ﬁrstName = ﬁrstName;\r\n        this.lastName = lastName;\r\n        this.gender = gender;\r\n        this.height = height;\r\n        this.hobbies = hobbies;         \r\n        this.birthday = birthday;         \r\n        this.isAlive = isAlive;\r\n    } \r\n};\r\n\r\nexport const timeout = millisecond =>{\r\n    setTimeout(()=>\r\n{        \r\n   return logger(\"Timeout is over by \"+ millisecond/1000+\" seconds\"); \r\n   //send out a success feedback with data using resolve \r\n}, \r\n    millisecond) \r\n\r\n}\r\n\r\n/*export const timeoutwithpromise = (millisecond) =>{\r\n        new Promise ((resolve, reject) =>{\r\n        setTimeout(()=>{  \r\n            resolve(\"Timeout is over by \"+ millisecond/1000+\" seconds\");\r\n            reject(\"Timeout is over but I am upset. You should not have invoked a timeout in the ﬁrst place. Hence I am sending a <em> reject </em> instead of a <em>resolve</em>!\"); \r\n            //send out a reject feedback     \r\n               }, 1000)    \r\n              }).then((data) => { \r\n                        logger(`${data}`);\r\n                        //This should output \"Timeout is over\"    \r\n                        }).catch((error) => {\r\n                          //This will only be reached it the asynchronous function returned a reject statement.        \r\n                           return logger(`Error message received: ${error}`);   \r\n                           }).then(() =>{       \r\n                               return logger(`This function is executed after success or failure is returned`) \r\n                                 }, millisecond)\r\n}*/\r\n\r\n\r\n    export const genericFunction1 = (m, c, ...x) => {    \r\n        //This function returns an array of {x,y} objects for all the x arguments passed.\r\n\r\n        //Map the array of x into an array of {x,y} object, with the y value calculated each time.    \r\n         let coordinates = x.map((x) => {        \r\n              return {'x': x, 'y' : (m*x) + c};    \r\n            })   \r\n              //loop through our array of {x,y} and prepare the output string to be returned. We can do this with the forEach() method of array object or use the for…of loop introduced in ES6 as shown below     \r\n              let output = 'The (x,y) values are as follows: '     \r\n              for (let coordinate of coordinates){         \r\n                   let xy = `(${coordinate.x},${coordinate.y})`         \r\n                   output+=xy;     \r\n               }   \r\n                //Previous style…(Going forward, we shall only be using the new for…of loop in such scenario)\r\n               //coordinates.forEach((coordinate)=>{ \r\n               //     let xy = `(${coordinate.x},${coordinate.y})`;    \r\n                //    output+=xy;     //})     \r\n                          return output; \r\n                       } \r\n   \r\n         \r\n   export const coordinateGenerator = (m, c, ...xValues) => {\r\n       //This function returns an array of {x,y} objects for all the x arguments passed to it.\r\n       \r\n       let coordinates = xValues.map(\r\n           (x) =>{\r\n               return {'x':x, 'y':(m*x)+ c};\r\n           }\r\n       );\r\n       let output = 'The (x,y) values are as follows '\r\n       for (let coordinate of coordinates){\r\n           let xy = `(${coordinate.x}, ${coordinate.y})`;\r\n           //output = output + xy  //This is the same as below.\r\n           output +=xy;\r\n       }\r\n       return output;\r\n   \r\n   }\r\n   "
      ]
    },
    "sourceType": "script",
    "mtime": 1589327176807
  }
}